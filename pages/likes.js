import Head from 'next/head'
//import Feed from '../components/Feed'
import Sidebar from '../components/Sidebar'
//import Post from '../components/Post'
//import { useRecoilState } from 'recoil'
//import { modalState } from '../atom/modalAtom'
//import Modal from '../components/Modal'
import { getProviders, getSession, useSession } from 'next-auth/react'
import { useRouter } from 'next/router';
//import Comment from '../components/Comment'
import {
    collection,
    onSnapshot,
    query,
    orderBy
  } from "@firebase/firestore";
import { useEffect, useState } from 'react'
//import { db } from '../firebase'
import Login from '../components/Login'
import { ArrowLeftIcon } from '@heroicons/react/outline'
import Widgets from '../components/Widgets'
import Likes from '../components/Likes';
import { db } from '../firebase';
function LikesPage({trendingResults, followResults, providers}) {
    const { data: session } = useSession()
  //const [isOpen, setIsOpen] = useRecoilState(modalState);
  const [likes, setLikes] = useState([]);
  const router = useRouter()
  //const [comments, setComments] = useState([]);
  const id = localStorage.getItem('postid')


  useEffect(
    ()=> onSnapshot(query(collection(db, 'posts', id, 'likes'), orderBy("timestamp", "desc")), (snapshot) => setLikes(snapshot.docs), [db, id])
)

  
  
  if(!session) return <Login providers={providers} />



  return <div>
  <Head>
    <title>Likes</title>
    <meta name="description" content="Generated by create next app" />
    <link rel="icon" href="/favicon.ico" />
  </Head>

<main className="bg-black min-h-screen flex max-w-[1400px] mx-auto">
<Sidebar/>
<div className="flex-grow border-l border-r border-gray-700 max-w-2xl sm:ml-[73px] xl:ml-[370px]">
<div className="flex items-center px-1.5 py-2 border-b border-gray-700 text-[#d9d9d9] font-semibold text-xl gap-x-4 sticky top-0 z-50 bg-black">
<div className="flex items-center justify-center hoverAnimation w-9 h-9 xl:px-0" onClick={() => {router.push("/")}}>
  <ArrowLeftIcon className="h-5 text-white"/>
</div>
Likes
</div>
{likes.length > 0 && (
    <div>
        {likes.map((like) => (
            <Likes key={like.id} id={like.id} likes={like.data()}/>
        ))}
    </div>
)}
</div>
<Widgets trendingResults={trendingResults}
          followResults={followResults}/>
</main>
</div>
}

export default LikesPage;

export async function getServerSideProps(context){
  const trendingResults = await fetch("https://jsonkeeper.com/b/NKEV").then(
    (res) => res.json()
  );
  const followResults = await fetch("https://jsonkeeper.com/b/WWMJ").then(
    (res) => res.json()
  );
  const providers = await getProviders();
  const session = await getSession(context);

  return {
    props: {
      providers: providers,
      session: session,
      trendingResults: trendingResults,
      followResults: followResults,
    }
  }
}

